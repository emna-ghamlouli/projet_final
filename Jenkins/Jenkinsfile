pipeline {
    agent any

    environment {
        KUBECONFIG_CREDENTIALS = credentials('kubernetes') // ton secret Jenkins
    }

    stages {
        stage('Déployer MySQL') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh '''
                    kubectl apply -f K8S/mysql-pv.yaml
                    kubectl apply -f K8S/mysql-pvc.yaml
                    kubectl apply -f K8S/mysql-deployment.yaml
                    kubectl rollout status deployment/mysql
                    '''
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir('demo') {
                    sh './mvnw clean install -DskipTests'
                    sh 'docker build -t backend-image .'
                }
            }
        }

        stage('Build Frontend') {
            steps {
                dir('frontend') {
                    sh 'npm install'
                    sh 'npm run build --prod'
                    sh 'docker build -t frontend-image .'
                }
            }
        }

        stage('Déployer Backend et Frontend') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh '''
                    kubectl apply -f K8S/backend-deployment.yaml
                    kubectl apply -f K8S/frontend-deployment.yaml
                    kubectl apply -f K8S/ingress.yaml
                    kubectl rollout status deployment/backend
                    kubectl rollout status deployment/frontend
                    '''
                }
            }
        }

        stage('Vérification') {
            steps {
                echo '✅ Déploiement terminé avec succès !'
            }
        }
    }

    post {
        failure {
            echo '❌ Une erreur est survenue.'
        }
    }
}
