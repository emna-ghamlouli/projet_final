pipeline {
    agent any

    environment {
        KUBECONFIG_CREDENTIALS = credentials('kubernetes') // Kubeconfig enregistré dans Jenkins
    }

    stages {
        stage('Déployer MySQL') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh '''
                    kubectl apply -f K8S/mysql-pv.yaml
                    kubectl apply -f K8S/mysql-pvc.yaml
                    kubectl apply -f K8S/mysql-deployment.yaml
                    kubectl rollout status deployment/mysql
                    '''
                }
            }
        }

stage('Tester la base') {
  steps {
    withKubeConfig([credentialsId: 'KUBECONFIG_CREDENTIALS']) {
      sh '''
        cat <<EOF | kubectl apply -f -
        apiVersion: v1
        kind: Pod
        metadata:
          name: mysql-test
        spec:
          containers:
          - name: mysql
            image: mysql:5.7
            env:
            - name: MYSQL_ROOT_PASSWORD
              value: root
            command: ["sleep", "3600"]
          restartPolicy: Never
        EOF

        # Attendre que le pod soit prêt
        kubectl wait --for=condition=Ready pod/mysql-test --timeout=60s

        # Test de connexion
        kubectl exec -i mysql-test -- mysql -h mysql -uroot -proot -e "SHOW DATABASES;"

        # Nettoyage
        kubectl delete pod mysql-test
      '''
    }
  }
}


    post {
        success {
            echo '✅ Test de la base MySQL réussi.'
        }
        failure {
            echo '❌ Échec du test MySQL.'
        }
    }
}

