pipeline {
    agent any

    environment {
        DOCKER_CREDENTIALS = credentials('Docker') // Identifiants Docker
    }

    stages {

        stage('Déployer MySQL') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh '''
                    kubectl apply -f K8S/mysql-pv.yaml
                    kubectl apply -f K8S/mysql-pvc.yaml
                    kubectl apply -f K8S/mysql-deployment.yaml
                    kubectl rollout status deployment/mysql
                    '''
                }
            }
        }

        stage('Build Backend') {
            steps {
                dir('demo') {
                    sh 'chmod +x mvnw'
                    sh './mvnw clean install -DskipTests'
                }
            }
        }

       stage('Build Frontend') {
    agent {
        docker {
            image 'node:18-alpine'
        }
    }
    steps {
        dir('frontend') {
            sh 'npm install'
            sh 'npm run build --prod'
        }
    }
}


        stage('Docker Build & Push') {
            steps {
                script {
                    def commit = sh(script: "git rev-parse --short HEAD", returnStdout: true).trim()

                    withDockerRegistry(credentialsId: 'Docker', url: '') {
                        sh """
                        docker build -t ghamlouli/backend-image:${commit} -f demo/Dockerfile .
                        docker build -t ghamlouli/frontend-image:${commit} -f frontend/Dockerfile .

                        docker push ghamlouli/backend-image:${commit}
                        docker push ghamlouli/frontend-image:${commit}
                        """
                    }
                }
            }
        }

        stage('Déployer Backend et Frontend') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh '''
                    kubectl apply -f K8S/backend-deployment.yaml
                    kubectl apply -f K8S/frontend-deployment.yaml

                    kubectl rollout status deployment/backend
                    kubectl rollout status deployment/frontend
                    '''
                }
            }
        }

        stage('Vérification') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh 'kubectl get pods'
                    sh 'kubectl get svc'
                }
            }
        }
    }

    post {
        failure {
            echo "❌ Une erreur est survenue."
        }
        success {
            echo "✅ Pipeline exécutée avec succès !"
        }
    }
}
