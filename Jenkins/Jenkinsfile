pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = 'Docker'           // ID des credentials Jenkins pour Docker Hub
        BACKEND_IMAGE = 'ghamlouli/demo'           // Nom de l'image backend
        FRONTEND_IMAGE = 'ghamlouli/frontend'      // Nom de l'image frontend
    }

    tools {
        nodejs 'NodeJS 18'                         // Utilise NodeJS installé via Jenkins
    }

    stages {

        stage('Build') {
            parallel {
                stage('Build Backend') {
                    steps {
                        dir('backend') {
                            sh 'chmod +x mvnw'
                            sh './mvnw clean package -DskipTests'
                        }
                    }
                }

                stage('Build Frontend') {
                    steps {
                        dir('frontend') {
                            sh 'npm install'
                            sh 'npm run build'
                        }
                    }
                }
            }
        }

        stage('Deploy MySQL to K8s') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh '''
                    kubectl apply -f k8s/mysql-pv.yaml
                    kubectl apply -f k8s/mysql-pvc.yaml
                    kubectl apply -f k8s/mysql-deployment.yaml
                    kubectl rollout status deployment/mysql
                    '''
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                withDockerRegistry(credentialsId: "${DOCKERHUB_CREDENTIALS}", url: '') {
                    sh 'docker build -t ${BACKEND_IMAGE}:latest ./backend'
                    sh 'docker push ${BACKEND_IMAGE}:latest'

                    sh 'docker build -t ${FRONTEND_IMAGE}:latest ./frontend'
                    sh 'docker push ${FRONTEND_IMAGE}:latest'
                }
            }
        }

        stage('Deploy to K8s') {
            parallel {
                stage('Deploy Backend') {
                    steps {
                        withKubeConfig([credentialsId: 'kubernetes']) {
                            sh '''
                            kubectl apply -f k8s/backend-deployment.yaml
                            kubectl rollout status deployment/backend
                            '''
                        }
                    }
                }

                stage('Deploy Frontend') {
                    steps {
                        withKubeConfig([credentialsId: 'kubernetes']) {
                            sh '''
                            kubectl apply -f k8s/frontend-deployment.yaml
                            kubectl rollout status deployment/frontend
                            '''
                        }
                    }
                }
            }
        }
    }

    post {
        success {
            echo '✅ Déploiement terminé avec succès !'
        }
        failure {
            echo '❌ Échec du pipeline !'
        }
    }
}
