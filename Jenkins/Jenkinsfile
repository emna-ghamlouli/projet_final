pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = 'Docker'   // ID des credentials dans Jenkins
        BACKEND_IMAGE = 'ghamlouli/myapp'
        FRONTEND_IMAGE = 'ghamlouli/myfrontend'
    }

    stages {
        stage('Clone Repository') {
            steps {
                git 'git@github.com:emna-ghamlouli/projet_final.git'
            }
        }

        stage('Build Backend') {
            dir('demo') {
                steps {
                    sh 'chmod +x mvnw'
                    sh './mvnw clean package -DskipTests'
                }
            }
        }

        stage('Build Frontend') {
            dir('frontend') {
                steps {
                    sh 'npm install'
                    sh 'npm run build --prod'
                }
            }
        }

        stage('Docker Build & Push') {
            steps {
                script {
                    docker.withRegistry('https://index.docker.io/v1/', "${DOCKERHUB_CREDENTIALS}") {
                        docker.build("${BACKEND_IMAGE}", 'demo').push('latest')
                        docker.build("${FRONTEND_IMAGE}", 'frontend').push('latest')
                    }
                }
            }
        }

        stage('Deploy MySQL to K8s') {
            steps {
                sh '''
                kubectl apply -f K8S/mysql-pv.yaml
                kubectl apply -f K8S/mysql-pvc.yaml
                kubectl apply -f K8S/mysql-deployment.yaml
                kubectl rollout status deployment/mysql
                '''
            }
        }

        stage('Deploy Backend to K8s') {
            steps {
                sh '''
                kubectl apply -f K8S/backend-deployment.yaml
                kubectl rollout status deployment/backend
                '''
            }
        }

        stage('Deploy Frontend to K8s') {
            steps {
                sh '''
                kubectl apply -f K8S/frontend-deployment.yaml
                kubectl rollout status deployment/frontend
                '''
            }
        }
    }

    post {
        success {
            echo 'üöÄ D√©ploiement termin√© avec succ√®s !'
        }
        failure {
            echo '‚ùå √âchec du pipeline !'
        }
    }
}
