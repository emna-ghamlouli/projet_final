pipeline {
    agent any

    environment {
        KUBECONFIG_CREDENTIALS = credentials('kubernetes') // Kubeconfig enregistré dans Jenkins
    }

    stages {
        stage('Déployer MySQL') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh '''
                    kubectl apply -f K8S/mysql-pv.yaml
                    kubectl apply -f K8S/mysql-pvc.yaml
                    kubectl apply -f K8S/mysql-deployment.yaml
                    kubectl rollout status deployment/mysql
                    '''
                }
            }
        }

        stage('Tester la base') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    // Créer un pod temporaire MySQL client pour exécuter des requêtes
                    sh '''
                    cat <<EOF | kubectl apply -f -
                    apiVersion: v1
                    kind: Pod
                    metadata:
                      name: mysql-client
                    spec:
                      restartPolicy: Never
                      containers:
                      - name: mysql
                        image: mysql:5.7
                        command: ["sh", "-c", "sleep 60"]
                    EOF

                    kubectl wait --for=condition=Ready pod/mysql-client --timeout=60s

                    kubectl exec mysql-client -- \
                      mysql -h mysql -u root -pmysql -e "SHOW DATABASES;"

                    # Nettoyage
                    kubectl delete pod mysql-client
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '✅ Test de la base MySQL réussi.'
        }
        failure {
            echo '❌ Échec du test MySQL.'
        }
    }
}

