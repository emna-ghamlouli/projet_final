pipeline {
    agent any

    environment {
        DOCKERHUB_CREDENTIALS = 'Docker'
        BACKEND_IMAGE = 'ghamlouli/demo'
        FRONTEND_IMAGE = 'ghamlouli/frontend'
    }

    tools {
        nodejs 'NodeJS 18'
    }

    stages {
        stage('Define Tags') {
            steps {
                script {
                    backendTag = "1.0.${env.BUILD_NUMBER}"
                    frontendTag = "1.0.${env.BUILD_NUMBER}"
                }
            }
        }

        // ... (tous tes autres stages ici)

        stage('Apply Ingress') {
            steps {
                withKubeConfig([credentialsId: 'kubernetes']) {
                    sh 'kubectl apply -f ingress.yaml'
                }
            }
        }
    } // ✅ fermeture correcte du bloc `stages`

    post {
        success {
            mail to: 'emnaghamlouli1995@gmail.com',
                 subject: "✅ [${env.JOB_NAME}] - Build #${env.BUILD_NUMBER} succeeded",
                 body: "Le build ${env.BUILD_NUMBER} du job ${env.JOB_NAME} s'est terminé avec succès.\n\nLien : ${env.BUILD_URL}"
        }
        failure {
            mail to: 'emnaghamlouli1995@gmail.com',
                 subject: "❌ [${env.JOB_NAME}] - Build #${env.BUILD_NUMBER} failed",
                 body: "Le build ${env.BUILD_NUMBER} du job ${env.JOB_NAME} a échoué.\n\nLien : ${env.BUILD_URL}"
        }
        always {
            echo 'Notification e-mail envoyée.'
        }
    }
}
